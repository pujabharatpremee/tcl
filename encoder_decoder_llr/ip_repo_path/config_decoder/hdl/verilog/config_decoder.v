// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="config_decoder,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=1,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=12,HLS_SYN_LUT=100,HLS_VERSION=2018_3}" *)

module config_decoder (
        din_words_V_V_TDATA,
        dout_words_V_V_TDATA,
        ctrl_V_V_TDATA,
        ap_clk,
        ap_rst_n,
        ctrl_V_V_TVALID,
        ctrl_V_V_TREADY,
        din_words_V_V_TVALID,
        din_words_V_V_TREADY,
        dout_words_V_V_TVALID,
        dout_words_V_V_TREADY,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output  [7:0] din_words_V_V_TDATA;
output  [7:0] dout_words_V_V_TDATA;
output  [31:0] ctrl_V_V_TDATA;
input   ap_clk;
input   ap_rst_n;
output   ctrl_V_V_TVALID;
input   ctrl_V_V_TREADY;
output   din_words_V_V_TVALID;
input   din_words_V_V_TREADY;
output   dout_words_V_V_TVALID;
input   dout_words_V_V_TREADY;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    Block_proc13_U0_ap_start;
wire    Block_proc13_U0_ap_done;
wire    Block_proc13_U0_ap_continue;
wire    Block_proc13_U0_ap_idle;
wire    Block_proc13_U0_ap_ready;
wire   [31:0] Block_proc13_U0_ctrl_V_V_TDATA;
wire    Block_proc13_U0_ctrl_V_V_TVALID;
wire   [7:0] Block_proc13_U0_din_words_V_V_TDATA;
wire    Block_proc13_U0_din_words_V_V_TVALID;
wire   [7:0] Block_proc13_U0_dout_words_V_V_TDATA;
wire    Block_proc13_U0_dout_words_V_V_TVALID;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Block_proc13_U0_start_full_n;
wire    Block_proc13_U0_start_write;

Block_proc13 Block_proc13_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc13_U0_ap_start),
    .ap_done(Block_proc13_U0_ap_done),
    .ap_continue(Block_proc13_U0_ap_continue),
    .ap_idle(Block_proc13_U0_ap_idle),
    .ap_ready(Block_proc13_U0_ap_ready),
    .ctrl_V_V_TDATA(Block_proc13_U0_ctrl_V_V_TDATA),
    .ctrl_V_V_TVALID(Block_proc13_U0_ctrl_V_V_TVALID),
    .ctrl_V_V_TREADY(ctrl_V_V_TREADY),
    .din_words_V_V_TDATA(Block_proc13_U0_din_words_V_V_TDATA),
    .din_words_V_V_TVALID(Block_proc13_U0_din_words_V_V_TVALID),
    .din_words_V_V_TREADY(din_words_V_V_TREADY),
    .dout_words_V_V_TDATA(Block_proc13_U0_dout_words_V_V_TDATA),
    .dout_words_V_V_TVALID(Block_proc13_U0_dout_words_V_V_TVALID),
    .dout_words_V_V_TREADY(dout_words_V_V_TREADY)
);

assign Block_proc13_U0_ap_continue = 1'b1;

assign Block_proc13_U0_ap_start = ap_start;

assign Block_proc13_U0_start_full_n = 1'b1;

assign Block_proc13_U0_start_write = 1'b0;

assign ap_done = Block_proc13_U0_ap_done;

assign ap_idle = Block_proc13_U0_ap_idle;

assign ap_ready = Block_proc13_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Block_proc13_U0_ap_done;

assign ap_sync_ready = Block_proc13_U0_ap_ready;

assign ctrl_V_V_TDATA = Block_proc13_U0_ctrl_V_V_TDATA;

assign ctrl_V_V_TVALID = Block_proc13_U0_ctrl_V_V_TVALID;

assign din_words_V_V_TDATA = Block_proc13_U0_din_words_V_V_TDATA;

assign din_words_V_V_TVALID = Block_proc13_U0_din_words_V_V_TVALID;

assign dout_words_V_V_TDATA = Block_proc13_U0_dout_words_V_V_TDATA;

assign dout_words_V_V_TVALID = Block_proc13_U0_dout_words_V_V_TVALID;

endmodule //config_decoder
